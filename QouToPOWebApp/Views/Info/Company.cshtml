@using QouToPOWebApp.Models.InfoModels

@model Company

@{
    ViewData["Title"] = "Company";

    var companies = ViewData["companies"] as List<Company>;
}

<h1>@ViewData["Title"]</h1>

<p class="mb-4">
    <a class="btn btn-primary shadow" onclick="addCompany()">Create New</a>
</p>

<div class="card p-3 border-0 shadow-sm">
    <table class="table table-hover" id="companyTable">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Company_name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Company_name_jpn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address_jpn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Postal_code)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Telephone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Fax)
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in companies) {
                <tr>
                    <td></td>
                    <td class="td-control">
                        @Html.DisplayFor(modelItem => item.Company_name)
                    </td>
                    <td class="td-control">
                        @Html.DisplayFor(modelItem => item.Company_name_jpn)
                    </td>
                    <td class="td-control">
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td class="td-control">
                        @Html.DisplayFor(modelItem => item.Address_jpn)
                    </td>
                    <td class="td-control">
                        @Html.DisplayFor(modelItem => item.Postal_code)
                    </td>
                    <td class="text-nowrap td-control">
                        @Html.DisplayFor(modelItem => item.Telephone)
                    </td>
                    <td class="text-nowrap td-control">
                        @Html.DisplayFor(modelItem => item.Fax)
                    </td>
                    <td class="text-nowrap">
                        <a class="btn btn-sm btn-light me-1" href="javascript:void(0)" onclick="editCompany(@item.Company_ID)">Edit</a>
                        <a class="btn btn-sm btn-light text-danger" href="javascript:void(0)" onclick="deleteCompany(@item.Company_ID)">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="companyModal" tabindex="-1" aria-labelledby="createModalLabel" >
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="companyModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="companyForm" asp-controller="Info" asp-action="" method="post">
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Company_ID" />
                    <div class="row mb-2">
                        <div class="col">
                            <label asp-for="Company_name" class="control-label"></label><span class="text-danger" title="Required">*</span>
                            <input asp-for="Company_name" class="form-control" />
                            <span asp-validation-for="Company_name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label asp-for="Company_name_jpn" class="control-label"></label>
                            <input asp-for="Company_name_jpn" class="form-control"/>
                            <span asp-validation-for="Company_name_jpn" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col">
                            <label asp-for="Address" class="control-label"></label><span class="text-danger" title="Required">*</span>
                            <input asp-for="Address" class="form-control" />
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label asp-for="Address_jpn" class="control-label"></label>
                            <input asp-for="Address_jpn" class="form-control"/>
                            <span asp-validation-for="Address_jpn" class="text-danger"></span>
                            <div class="form-text">Please enter Japanese address without postal code</div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-6">
                            <label asp-for="Postal_code" class="control-label"></label>
                            <div class="input-group">
                                <span class="input-group-text" id="postalSign">〒</span>
                                <input asp-for="Postal_code" class="form-control" />
                            </div>
                            <span asp-validation-for="Postal_code" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <label asp-for="Telephone" class="control-label"></label>
                            <input asp-for="Telephone" class="form-control" />
                            <span asp-validation-for="Telephone" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <label asp-for="Fax" class="control-label"></label>
                            <input asp-for="Fax" class="form-control" />
                            <span asp-validation-for="Fax" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <div class="form-group">
                        <a class="btn btn-link" href="javascript:void(0)" data-bs-dismiss="modal">Cancel</a>
                        <a href="javascript:void(0)" class="btn btn-primary" id="modalButton"></a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" >
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteModalLabel">Delete Entry</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Company_name)
                    </dt>
                    <dd class="col-sm-9" id="company_name">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Company_name_jpn)
                    </dt>
                    <dd class="col-sm-9" id="company_name_jpn">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Address)
                    </dt>
                    <dd class="col-sm-9" id="address">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Address_jpn)
                    </dt>
                    <dd class="col-sm-9" id="address_jpn">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Postal_code)
                    </dt>
                    <dd class="col-sm-9" id="postal_code">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Telephone)
                    </dt>
                    <dd class="col-sm-9" id="telephone">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Fax)
                    </dt>
                    <dd class="col-sm-9" id="fax">
                    </dd>
                </dl>
            </div>
            <div class="modal-footer border-0">
                <form asp-action="DeleteCompany">
                    <input type="hidden" name="id" id="deleteID" />
                    <a class="btn btn-link" href="javascript:void(0)" data-bs-dismiss="modal">Cancel</a>
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $.extend(true, $.fn.dataTable.defaults, {
            colReorder: {
                columns: ':gt(0)'
            },
            stateSave: true,
            stateSaveParams: function (settings, data) {
                data.search.search = '';
                data.start = 0;
            },
            responsive: true,
            fixedHeader: true,
            layout: {
                topStart: 'pageLength',
                topEnd: {
                    search: {
                        placeholder: 'Search'
                    },
                    buttons: [
                        {
                            extend: 'colvis',
                            text: 'Show/Hide columns',
                            className: 'btn btn-sm btn-secondary-subtle',
                            columns: ':not(.dt-control)', // Exclude control column
                            attr: {
                                title: 'Toggle visibility of table columns'
                            }
                        },
                        {
                            text: 'Restore table <i class="bi bi-arrow-clockwise"></i>',
                            className: 'btn btn-sm btn-secondary',
                            attr: {
                                title: 'Reset table column visibility and order'
                            },
                            action: function (e, dt, node, config) {
                                const tableId = dt.table().node().id;

                                dt.state.clear(); // Clear saved state
                                dt.destroy(); // Destroy DataTable instance

                                // Replace the old table DOM with the original clone
                                const $original = originalTableHTML[tableId].clone();
                                $('#' + tableId).replaceWith($original);

                                // Reinitialize
                                initCompanyTable();
                            }
                        }
                    ]
                },
                bottomStart: 'info',
                bottomEnd: 'paging'
            },
            order: [[1, 'desc']]
        });


        function initCompanyTable() {
            $("#companyTable").DataTable({
                columnDefs: [
                    {
                        targets: 0,
                        className: 'dt-control',
                        orderable: false,
                        defaultContent: '',
                        width: '20px'
                    },
                    {
                        targets: [2,4,5,6,7],
                        visible: false,
                        searchable: true
                    },
                    {
                        targets: 8,
                        searchable: false,
                        orderable: false
                    }
                ]
            });
        }

        const originalTableHTML = {}; // Use for cloning original table DOM

        $(document).ready(function () {
            originalTableHTML["companyTable"] = $('#companyTable').clone(); // Deep copy
            initCompanyTable();

        });


        $(document).on("click", ".dt-control, .td-control", function () {
            var $tableElement = $(this).closest('table');

            var tr = $(this).closest('tr');
            var table = $tableElement.DataTable(); // Get the correct DataTable instance
            var row = table.row(tr);

            if (row.child.isShown()) {
                row.child.hide();
                tr.removeClass('shown');
            } else {
                var rowData = row.data();
                var childData = '<table class="table table-bordered table-sm mb-0 w-100">';

                table.columns().every(function (index) {
                    if (!this.visible() && index !== 0) {
                        var header = $(table.column(index).header()).text();
                        childData += `
                            <tr>
                                <th class="px-2 text-nowrap" style="width:2%;">${header}</th>
                                <td class="px-2">${rowData[index] ? rowData[index] : '<span class="text-secondary">-</span>'}</td>
                            </tr>`;
                    }
                });

                childData += '</table>';

                row.child(childData || '<em>No row child data</em>').show();
                tr.addClass('shown');
            }
        });

        function addCompany() {
            $(".modal-title").text("Add Company");

            $("#modalButton").text("Create");

            $("#companyForm").attr("action", "/Info/CreateCompany");

            clearModal();

            // Show the modal
            $("#companyModal").modal("show");
        }

        function editCompany(id) {
            clearModal();
            
            $.ajax({
                url: "/Info/GetCompany",
                type: "POST",
                data: {id: id},
                success: function (data) {
                    // Iterate over the properties of the data object and set the corresponding form field values
                    $.each(data, function (key, value) {
                        var elementId = key.charAt(0).toUpperCase() + key.slice(1); // Capitalize the first letter
                        $("#" + elementId).val(value);
                    });

                    // Set the action attribute of the form
                    $("#companyForm").attr("action", "/Info/EditCompany/" + data["company_ID"]);
                    $("#companyModalLabel").text("Edit Company");
                    $("#modalButton").text("Update");

                    // Show the modal
                    $("#companyModal").modal("show");
                },
                error: function (response) {
                    console.error("Error:", response.status, response.responseJSON.message);
                    alert("Error: " + response.responseJSON.message);
                }
            });
        };

        function deleteCompany(id) {
            $.ajax({
                url: "/Info/GetCompany",
                type: "POST",
                data: {id: id},
                success: function (data) {
                    // Iterate over the properties of the data object and set the corresponding form field values
                    $.each(data, function (key, value) {
                        var $element = $("#" + key);
                        if ($element.length) {
                            $element.text(value);
                        }
                    });

                    $("#deleteID").val(data["company_ID"]);

                    // Show the modal
                    $("#deleteModal").modal("show");
                },
                error: function (response) {
                    console.error("Error:", response.status, response.responseJSON.message);
                    alert("Error: " + response.responseJSON.message);
                }
            });
        }

        $("#modalButton").on("click", function() {
            $("#companyForm").submit();
        });
        
        function clearModal() {
            $('input[type="text"]').val('');
            // $('select').prop('selectedIndex', "");

            $(".field-validation-error").text("");
        }
    </script>
}
